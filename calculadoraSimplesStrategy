// Interface Strategy
class OperationStrategy {
  execute(num1, num2) {}
}

// Classes concretas que implementam a Strategy
class AdditionOperation extends OperationStrategy {
  execute(num1, num2) {
    return num1 + num2;
  }
}

class SubtractionOperation extends OperationStrategy {
  execute(num1, num2) {
    return num1 - num2;
  }
}

class MultiplicationOperation extends OperationStrategy {
  execute(num1, num2) {
    return num1 * num2;
  }
}

// Classe context que define qual strategy será usada
class Calculator {
  constructor(strategy) {
    this.strategy = strategy;
  }

  compute(num1, num2) {
    return this.strategy.execute(num1, num2);
  }
}

// Exemplo de uso da calculadora
const num1 = parseInt(prompt("Digite o primeiro número:"));
const num2 = parseInt(prompt("Digite o segundo número:"));
const operation = prompt("Digite a operação matemática (1 para soma, 2 para subtração, 3 para multiplicação):");

let strategy;

switch (operation) {
  case "1":
    strategy = new AdditionOperation();
    break;
  case "2":
    strategy = new SubtractionOperation();
    break;
  case "3":
    strategy = new MultiplicationOperation();
    break;
  default:
    console.log("Operação inválida");
    break;
}

if (strategy) {
  const calculator = new Calculator(strategy);
  const result = calculator.compute(num1, num2);
  console.log("Resultado:", result);
}
